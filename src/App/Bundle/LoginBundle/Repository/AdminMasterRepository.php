<?php

namespace App\Bundle\LoginBundle\Repository;

/**
 * AdminMasterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdminMasterRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * getPermission
     *
     * @author liulian
     *
     * @param $master_id
     * @param $group_id
     *
     * @return array
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getPermission($master_id, $group_id)
    {
        if ($group_id === 1) {
            return ['*'];
        } else {
            $permissionArrByGroup  = $this->getPermissionByGroupId($group_id);
            $permissionArrByMaster = $this->getPermissionByMasterId($master_id);

            $permission = array_unique(array_merge($permissionArrByGroup, $permissionArrByMaster));

            $data = $this->getPermissionByIdArr($permission);

            return $data;
        }

    }

    /**
     * getPermissionByMasterId 根据用户id获取权限
     *
     * @author liulian
     *
     * @param $master_id
     *
     * @return array
     */
    public function getPermissionByMasterId($master_id)
    {
        $list            = $this->_em->createQueryBuilder()
            ->select('m.permissionId')
            ->from('AppLoginBundle:AdminMasterPermission', 'm')
            ->where('m.masterId =:masterId')
            ->setParameter('masterId', $master_id)
            ->andWhere('m.status =:status')
            ->setParameter('status', 1)
            ->getQuery()
            ->getArrayResult();
        $permissionIdArr = [];
        if ($list) {
            $permissionIdArr = array_column($list, 'permissionId');
        }

        return $permissionIdArr;
    }

    /**
     * getPermissionByGroupId
     *
     * @author liulian
     *
     * @param $group_id
     *
     * @return array
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getPermissionByGroupId($group_id)
    {
        $list = $this->_em->createQueryBuilder()
            ->select('g.permission')
            ->from('AppLoginBundle:AdminGroup', 'g')
            ->where('g.id =:groupId')
            ->setParameter('groupId', $group_id)
            ->getQuery()
            ->getOneOrNullResult();

        $permissionArr = [];
        if ($list) {
            $permissionArr = explode(',', $list['permission']);
        }

        return $permissionArr;
    }

    /**
     * getPermissionByIdArr 获取用户权限名称
     *
     * @author liulian
     *
     * @param array $id_arr id数组
     *
     * @return array
     */
    public function getPermissionByIdArr($id_arr)
    {
        $qb = $this->_em->createQueryBuilder();

        $list = $qb->from('AppLoginBundle:AdminPermission', 'm')
            ->select('m.action, m.model')
            ->where($qb->expr()->in('m.id', $id_arr))
            ->getQuery()
            ->getArrayResult();
        $data = [];
        if ($list) {
            foreach ($list as $v) {
                $data[] = $v['model'] . '-' . $v['action'];
            }
        }

        return $data;
    }
}
